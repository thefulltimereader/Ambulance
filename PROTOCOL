The validator output:

-VALID
	-SCORE: int number of people rescued
-INVALID
	-BAD INPUT
	-Person already rescued
	-A person died in the ambulance
	-A person does not exist
	-A person is already rescued
	-Too many people in the ambulance
	-etc.. more to come

RULES implemented in this validator:
- 1 min to go one block north-south, east-west
- the ambulances do NOT need to return ot the hosiptal they begin
- each ambulance can carry up to FOUR
- 1 min to load ONE person
- up to 1 min to unload FOUR people (however many <= 4, requires 1
min)

SAMPLE RESULT INPUT:
     P=Pickup 
     D=Drop off
     Each ambulance gets a global_unique_ID, also for people [index
     starts from 0]
     First time an ambulance is introduced, they are assigned a
     static location (FOR their hospital)
     	i.e. if input of hospital(nmambulance) look like
	    ----
		 5
		 9
		 6
		 ----
		 There exists 3 hospitals with static loc (x1,y1),
     (x2,y2), (x3,y3), and there are 20 ambulances total (amb 0->20).
     
     Input format
     Input starts with form "ambulance:"+AMBULANCE_ID(P or D) depending on Pick up or
     Drop-off, with its associated hospital's (x, y).
     	   i.e. in our example above, if hospital_id:2's location is
     (100,100), ambulance:10 will have (100, 100) following their id
     all the time.

     Dropping/Picking up:
     If Ambulance ID (x, y) is followed by id/info of people, it is assumed that
     that input is a PICKUP
     Otherwise, it will be a drop off
     
     So pickup would look like:
     Amubulance:AMUBLANCE_ID (hosx,hosy) PERSON0_ID (px,py,ptime)
     PERSON1_ID (px,py,ptime) ...upto PERSON3_ID (px,py,ptime)
     Drop off is:
     Amubulance:AMUBLANCE_ID (hosx,hosy)
     
     EXAMPLE (using sampleInput):
	Ambulance 0 (45,32) 5 (95,82,115) //Ambulance 0 from Hospital 0 [location of Hospital 0 introduced here] picks up person id 5
	Ambulance 6 (30,30) 115 (31,39,110) 141 (31,88,145) //Ambulance 6 from Hospital 1 [loc of Hos1 introduced here] picks up person115 and person 141
	Ambulance 1 (45,32) 186 (49,76,139) 9 (60, 68, 72) //Ambulance 1 from Hospital 0[HAS to have the loc of Hospital 0 stated in the first line] picks up 186 and 9
	Ambulance 1 (30,30) //Ambulance 1 Drops off everyone it has on hospital 1
	Ambulance 14 (59,68) 206 (59,22,70) //Ambulance 14 from hospital 2 picks up 206
     ....

     DELIMITERS:
     All inputs other than the (x,y) location coordinates ALL
     delimiters will be the white space. So please have at least 1 space between
     inputs. 
     *BUT* please just to make my life easier, please have the coordinates (x,y) with no space.
     
     Ambulance   1    (45,32)  5     (84,26,95)
     and 
     Ambulance 1 (45,32)  5 (84,26,95)

     are the same.
     BUT
     Ambulance 1 (45 , 32) 5 (84, 26, 95)
     is bad.

